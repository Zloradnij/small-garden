version: '3'

services:
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}-nginx
    restart: always
    volumes:
      - ./:/${APP_NAME}
      - ./docker/nginx:/etc/nginx/conf.d
    ports:
      - "8085:80"
    networks:
      garden_net:
        ipv4_address: 173.29.1.3
    depends_on:
      - php-fpm
      - db

  php-fpm:
    build:
      dockerfile: ./docker/php/Dockerfile
      context: ./
      args:
        user: zloradnij
        uid: 1000
        workDir: ${APP_NAME}
    container_name: ${APP_NAME}-fpm
    volumes:
      - ./:/${APP_NAME}
    networks:
      garden_net:
        ipv4_address: 173.29.1.4
    depends_on:
      - db

  db:
    container_name: ${APP_NAME}-db
    image: postgres:15
    restart: unless-stopped
    volumes:
      - garden-pg:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DATABASE=${DB_DATABASE}
      - POSTGRES_DB=${DB_DATABASE}
    ports:
      - '5437:5432'
    expose:
      - "5437"
    networks:
      garden_net:
        ipv4_address: 173.29.1.5

####> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-15}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###

networks:
  garden_net:
    ipam:
      driver: default
      config:
        - subnet: 173.29.0.0/16

volumes:
  garden-pg:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
